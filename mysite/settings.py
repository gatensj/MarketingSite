"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.11.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# SECURITY WARNING: keep the secret key used in production secret!
with open('mysite/secret_key.txt') as f:
    SECRET_KEY = f.read().strip()


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

# Application definition
ALLOWED_HOSTS = ['vagrant.wharton.upenn.edu', 'localhost']

SITE_ID = 2

PREREQ_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'taggit',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'tinymce',
    'modelcluster',
    'redactor',
    'homepage',
    'photologue',
    'sortedm2m',
    'wagtail.wagtailcore',
    'wagtail.wagtailadmin',
    'wagtail.wagtaildocs',
    'wagtail.wagtailsnippets',
    'wagtail.wagtailusers',
    'wagtail.wagtailimages',
    'wagtail.wagtailembeds',
    'wagtail.wagtailsearch',
    'wagtail.wagtailsites',
    'wagtail.wagtailredirects',
    'wagtail.wagtailforms',
]

WAGTAIL_CONTRIB_APPS = [
    'wagtailcodeblock',
    'wagtailcontentstream',
    'wagtailemoji',
    'wagtailerrorpages',
    'wagtailfontawesome',
    'wagtailgridder',
    'wagtail.contrib.table_block',
    'wagtail.contrib.modeladmin',
    'wagtail.contrib.settings',
    'wagtailtinymce',
]

PROJECT_APPS = [
    'cms',
    'cms.home',
]

INSTALLED_APPS = PREREQ_APPS + WAGTAIL_CONTRIB_APPS + PROJECT_APPS

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.PersistentRemoteUserMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'wagtail.wagtailcore.middleware.SiteMiddleware',
    'wagtail.wagtailredirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'

WAGTAIL_SITE_NAME = 'MarketingByE'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATIC_URL = '/static/'

STATIC_JS_DIR = os.path.join(STATIC_ROOT, "js")


# EMAIL SETUP
with open('mysite/email_host.txt') as i:
    EMAIL_HOST = i.read().strip()

with open('mysite/email_host_user.txt') as j:
    EMAIL_HOST_USER = j.read().strip()

with open('mysite/email_pw.txt') as g:
    EMAIL_HOST_PASSWORD = g.read().strip()

EMAIL_PORT = 587

EMAIL_USE_TLS = True


# MEDIA SETUP
MEDIA_URL = "/media/"

MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "mysite/uploads")


# TINYMCE SETUP
TINYMCE_JS_ROOT = os.path.join(STATIC_ROOT, "tiny_mce")

TINYMCE_JS_URL = os.path.join(TINYMCE_JS_ROOT, "tiny_mce.js")

TINYMCE_DEFAULT_CONFIG = {
    'plugins': "table,spellchecker,paste,searchreplace",
    'theme': "advanced",
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 10,
}

TINYMCE_SPELLCHECKER = True

TINYMCE_COMPRESSOR = True


# REDACTOR SETUP
REDACTOR_OPTIONS = {'lang': 'en'}

REDACTOR_UPLOAD = MEDIA_ROOT


# HAYSTACK SETUP
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.solr_backend.SolrEngine',
        'URL': 'http://vagrant.upenn.edu/solr/blog'
    },
}


############## COMMENTED OUT ON PURPOSE
# MEDIA_URL = "http://vagrant.wharton.upenn.edu:8000/"
# TINYMCE_JS_URL = os.path.join("static/django-tinymce/tinymce/static/tiny_mce/tiny_mce.js")
# TINYMCE_JS_URL = "static/django-tinymce/tinymce/static/tiny_mce/tiny_mce.js"
# STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
# TINYMCE_JS_ROOT = os.path.join(STATIC_JS_DIR, "tiny_mce")
# TINYMCE_JS_URL = os.path.join(TINYMCE_JS_ROOT, "tiny_mce.js")
# TINYMCE_JS_ROOT = "static/django-tinymce/tinymce/static/tiny_mce"
# HOME_URL = 'http://vagrant.wharton.upenn.edu:8000/blog/'


# IF DEBUG IS TRUE Setup
if DEBUG is True:
    # For Wharton internal IPs
    INTERNAL_IPS = ('127.0.0.1', '192.168.99.1')

    def show_toolbar(request):
        return True

    DEBUG_TOOLBAR_CONFIG = {
        "SHOW_TOOLBAR_CALLBACK": show_toolbar,
        # "INTERCEPT_REDIRECTS": True,
    }

    INSTALLED_APPS += (
        'debug_toolbar',
    )

    MIDDLEWARE_CLASSES += [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]
